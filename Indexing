 A2. Write a C program to demonstrate indexing and associated operations.

          #include <stdio.h>
          #include <stdlib.h>
          #include <string.h>
                                     	
          #define MAX_STUDENTS 100
          #define LENGTH 50
           
          typedef struct {
          	int id;
          	char name[LENGTH];
          } Student;
           
          typedef struct {
          	Student students[MAX_STUDENTS];
          	int count;
          } StudentIndex;
           
          void add_student(StudentIndex *index, int id, const char *name) {
          	if (index->count < MAX_STUDENTS) {
              	index->students[index->count].id = id;
              	strncpy(index->students[index->count].name, name, LENGTH);
              	index->count++;
          	} else {
              	printf("Index is full, cannot add more students.\n");
          	}
          }
           
          void display_students( StudentIndex *index) {
          	printf("Student Records:\n");
          	for (int i = 0; i < index->count; i++) {
              	printf("ID: %d, Name: %s\n", index->students[i].id, index->students[i].name);
          	}
          }
           
          int search_student(const StudentIndex *index, int id) {
          	for (int i = 0; i < index->count; i++) {
              	if (index->students[i].id == id) {
                  	return i; // Return index of found student
              	}
          	}
          	return -1; // Not found
          }
           
          int main() {
          	StudentIndex index = { .count = 0 };
          	int choice, id;
          	char name[LENGTH];
           
          	while (1) {
              	printf("\nMenu:\n");
              	printf("1. Add Student\n");
              	printf("2. Display Students\n");
              	printf("3. Search Student by ID\n");
              	printf("4. Exit\n");
              	printf("Choose an option: ");
              	scanf("%d", &choice);
           
              	switch (choice) {
                  	case 1:
                      	printf("Enter student ID: ");
                      	scanf("%d", &id);
                      	printf("Enter student name: ");
                      	scanf(" %[^\n]", name); // Read string with spaces
                      	add_student(&index, id, name);
                      	break;
                  	case 2:
                      	display_students(&index);
                      	break;
                  	case 3:
                      	printf("Enter student ID to search: ");
                      	scanf("%d", &id);
                      	int found_index = search_student(&index, id);
                      	if (found_index != -1) {
                          	printf("Found Student-ID:%d, Name:%s\n",     index.students[found_index].id, index.students[found_index].name);
                      	} else {
                          	printf("Student with ID %d not found.\n", id);
                      	}
                      	break;
                  	case 4:
                      	exit(0);
                  	default:
                      	printf("Invalid choice. Please try again.\n");
              	}
          	}
           
          	           return 0;
          }
          
                           OUTPUT:
          
          Menu:
          1. Add Student
          2. Display Students
          3. Search Student by ID
          4. Exit
          
          Choose an option: 1
          Enter student ID: 1
          Enter student name: Samy Pal
          
          Menu:
          1. Add Student
          2. Display Students
          3. Search Student by ID
          4. Exit
          Choose an option: 1
          Enter student ID: 2
          Enter student name: Mani Singh
          
          Menu:
          1. Add Student
          2. Display Students
          3. Search Student by ID
          4. Exit
          Choose an option: 2
          Student Records:
          ID: 1, Name: Samy Pal
          ID: 2, Name: Mani Singh
          
          Menu:
          1. Add Student
          2. Display Students
          3. Search Student by ID
          4. Exit
          Choose an option: 3
          Enter student ID to search: 2
          Found Student-ID:2, Name:Mani Singh
          
          Menu:
          1. Add Student
          2. Display Students
          3. Search Student by ID
          4. Exit
          Choose an option: 4
          
